"""
Django settings for Pharmafriend project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/ 
"""

import os
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True , cast=bool)

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'application',
    'pharmastore',
    'category',
    'accounts',
    'carts',
    'orders',
    'admin_honeypot',
    'consultvideo'
]

# django.core.serializers
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

# Timeout functionality
# 'django_session_timeout.middleware.SessionTimeoutMiddleware',
# SESSION_EXPIRE_SECONDS = 60  # 1 hour
# SESSION_EXPIRE_AFTER_LAST_ACTIVITY = True
# SESSION_TIMEOUT_REDIRECT = 'accounts:loginuser'


# Root config
ROOT_URLCONF = 'PharmaFriend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR,'templates'),
            os.path.join(BASE_DIR,'application','templates'),
            os.path.join(BASE_DIR,'pharmastore','templates'),
            os.path.join(BASE_DIR,'signupmed','templates'),
            os.path.join(BASE_DIR,'loginmed','templates'),
            os.path.join(BASE_DIR,'category','templates'),
            os.path.join(BASE_DIR,'carts', 'templates'),
            os.path.join(BASE_DIR,'accounts', 'templates'),
            os.path.join(BASE_DIR,'orders', 'templates'),
            os.path.join(BASE_DIR,'consultvideo', 'templates'),
                 ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'category.context_processors.menu_links',
                'carts.context_processors.counter',
            ],
        },
    },
]

WSGI_APPLICATION = 'PharmaFriend.wsgi.application'

AUTH_USER_MODEL = 'accounts.Account'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': ,config('DB_HOST'),
        'PORT': config('DB_PORT'),
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'pharmafriend_aws',
#         'USER': 'pharmafriendaws',
#         'PASSWORD': 'devanshpharma',
#         'HOST': 'pharmafriendawsl.cbyudfnmulgh.ap-south-1.rds.amazonaws.com',
#         'POST': '5432',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = 'static/'

# CORS Config
# CORS_ORIGIN_ALLOW_ALL = True
# CORS_ALLOW_CREDENTIALS = False


STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'application', 'static'),
    os.path.join(BASE_DIR, 'pharmastore', 'static'),
    os.path.join(BASE_DIR, 'category', 'static'),
    os.path.join(BASE_DIR, 'carts', 'static'),
    os.path.join(BASE_DIR, 'accounts', 'static'),
    os.path.join(BASE_DIR, 'orders', 'static'),
    os.path.join(BASE_DIR, 'consultvideo', 'static'),
]

# Media files configurations
MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# settings.py
# CSRF_COOKIE_SECURE = True  # Default: False - Means will only send cookie via HTTPS (not HTTP)
# CSRF_USE_SESSIONS = False  # Default: False - Store CSRF token in Session as opposed to in cookie
# CSRF_COOKIE_HTTPONLY = False  # Default: False - True = client JavaScript cannot access the cookie

from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.ERROR: 'danger',
}

# SMTP Configuration
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_PORT = config('EMAIL_PORT', cast=int)
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=True , cast=bool)

SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SECURE_CROSS_ORIGIN_OPENER_POLICY='same-origin-allow-popups'
CORS_ORIGIN_ALLOW_ALL = True
